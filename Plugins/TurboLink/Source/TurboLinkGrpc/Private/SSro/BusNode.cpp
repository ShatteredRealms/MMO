//Generated by TurboLink CodeGenerator, do not edit!
#include "SSro/BusNode.h"
#include "SSro/BusService.h"
#include "TurboLinkGrpcManager.h"
#include "TurboLinkGrpcUtilities.h"
#include "Engine/World.h"
#include "TimerManager.h"
#include "Runtime/Launch/Resources/Version.h"

UCallBusServiceResetReaderBus* UCallBusServiceResetReaderBus::ResetReaderBus(UObject* WorldContextObject, const FGrpcSroBusTarget& Request, TMap<FString, FString>& MetaData)
{
	UCallBusServiceResetReaderBus* node = NewObject<UCallBusServiceResetReaderBus>(WorldContextObject);
	UTurboLinkGrpcManager* turboLinkManager = UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(WorldContextObject);

	node->BusService = Cast<UBusService>(turboLinkManager->MakeService("BusService"));
	if (node->BusService == nullptr)
	{
		return nullptr;
	}
	node->Request = Request;
	node->ServiceState = EGrpcServiceState::Idle;
	node->MetaData = MetaData;

	node->BusService->OnServiceStateChanged.AddUniqueDynamic(node, &UCallBusServiceResetReaderBus::OnServiceStateChanged);
	return node;
}

void UCallBusServiceResetReaderBus::Activate()
{
	BusService->Connect();
}

void UCallBusServiceResetReaderBus::OnServiceStateChanged(EGrpcServiceState NewState)
{
	if (ServiceState == NewState) return;
	ServiceState = NewState;

	if (NewState == EGrpcServiceState::TransientFailure)
	{
		FGrpcResult result;
		result.Code = EGrpcResultCode::ConnectionFailed;

		FGrpcSroResetBusResponse response;
		OnFail.Broadcast(result, response);

		Shutdown();
		return;
	}

	if (NewState == EGrpcServiceState::Ready)
	{
		BusServiceClient = BusService->MakeClient();
		BusServiceClient->OnContextStateChange.AddUniqueDynamic(this, &UCallBusServiceResetReaderBus::OnContextStateChange);
		BusServiceClient->OnResetReaderBusResponse.AddUniqueDynamic(this, &UCallBusServiceResetReaderBus::OnResponse);

		Context = BusServiceClient->InitResetReaderBus();
		BusServiceClient->ResetReaderBus(Context, Request, MetaData);
	}
}

void UCallBusServiceResetReaderBus::OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State)
{
	if (State == EGrpcContextState::Done)
	{
		Shutdown();
	}
}

void UCallBusServiceResetReaderBus::OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroResetBusResponse& Response)
{
	if (GrpcResult.Code == EGrpcResultCode::Ok)
	{
		OnResetReaderBusResponse.Broadcast(GrpcResult, Response);
	}
	else
	{
		OnFail.Broadcast(GrpcResult, Response);
	}
}

void UCallBusServiceResetReaderBus::Shutdown()
{
	BusService->OnServiceStateChanged.RemoveDynamic(this, &UCallBusServiceResetReaderBus::OnServiceStateChanged);
	if (BusServiceClient != nullptr)
	{
		BusService->RemoveClient(BusServiceClient);
		BusServiceClient->Shutdown();
		BusServiceClient = nullptr;
	}

	if (BusService != nullptr)
	{
		UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(this)->ReleaseService(BusService);
		BusService = nullptr;
	}

	SetReadyToDestroy();
#if ENGINE_MAJOR_VERSION>=5
	MarkAsGarbage();
#else
	MarkPendingKill();
#endif
}

UCallBusServiceResetWriterBus* UCallBusServiceResetWriterBus::ResetWriterBus(UObject* WorldContextObject, const FGrpcSroBusTarget& Request, TMap<FString, FString>& MetaData)
{
	UCallBusServiceResetWriterBus* node = NewObject<UCallBusServiceResetWriterBus>(WorldContextObject);
	UTurboLinkGrpcManager* turboLinkManager = UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(WorldContextObject);

	node->BusService = Cast<UBusService>(turboLinkManager->MakeService("BusService"));
	if (node->BusService == nullptr)
	{
		return nullptr;
	}
	node->Request = Request;
	node->ServiceState = EGrpcServiceState::Idle;
	node->MetaData = MetaData;

	node->BusService->OnServiceStateChanged.AddUniqueDynamic(node, &UCallBusServiceResetWriterBus::OnServiceStateChanged);
	return node;
}

void UCallBusServiceResetWriterBus::Activate()
{
	BusService->Connect();
}

void UCallBusServiceResetWriterBus::OnServiceStateChanged(EGrpcServiceState NewState)
{
	if (ServiceState == NewState) return;
	ServiceState = NewState;

	if (NewState == EGrpcServiceState::TransientFailure)
	{
		FGrpcResult result;
		result.Code = EGrpcResultCode::ConnectionFailed;

		FGrpcSroResetBusResponse response;
		OnFail.Broadcast(result, response);

		Shutdown();
		return;
	}

	if (NewState == EGrpcServiceState::Ready)
	{
		BusServiceClient = BusService->MakeClient();
		BusServiceClient->OnContextStateChange.AddUniqueDynamic(this, &UCallBusServiceResetWriterBus::OnContextStateChange);
		BusServiceClient->OnResetWriterBusResponse.AddUniqueDynamic(this, &UCallBusServiceResetWriterBus::OnResponse);

		Context = BusServiceClient->InitResetWriterBus();
		BusServiceClient->ResetWriterBus(Context, Request, MetaData);
	}
}

void UCallBusServiceResetWriterBus::OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State)
{
	if (State == EGrpcContextState::Done)
	{
		Shutdown();
	}
}

void UCallBusServiceResetWriterBus::OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroResetBusResponse& Response)
{
	if (GrpcResult.Code == EGrpcResultCode::Ok)
	{
		OnResetWriterBusResponse.Broadcast(GrpcResult, Response);
	}
	else
	{
		OnFail.Broadcast(GrpcResult, Response);
	}
}

void UCallBusServiceResetWriterBus::Shutdown()
{
	BusService->OnServiceStateChanged.RemoveDynamic(this, &UCallBusServiceResetWriterBus::OnServiceStateChanged);
	if (BusServiceClient != nullptr)
	{
		BusService->RemoveClient(BusServiceClient);
		BusServiceClient->Shutdown();
		BusServiceClient = nullptr;
	}

	if (BusService != nullptr)
	{
		UTurboLinkGrpcUtilities::GetTurboLinkGrpcManager(this)->ReleaseService(BusService);
		BusService = nullptr;
	}

	SetReadyToDestroy();
#if ENGINE_MAJOR_VERSION>=5
	MarkAsGarbage();
#else
	MarkPendingKill();
#endif
}
