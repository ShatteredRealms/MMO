//Generated by TurboLink CodeGenerator, do not edit!
#include "SSroChat/ChatMessage.h"
#include "SSroChat/ChatMarshaling.h"
#include "google/protobuf/util/json_util.h"

DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatLogRequest, ::sro::chat::ChatLogRequest)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatLog, ::sro::chat::ChatLog)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatLogs, ::sro::chat::ChatLogs)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatBanRequest, ::sro::chat::BanRequest)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatConnectChatChannelRequest, ::sro::chat::ConnectChatChannelRequest)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatRequestSetCharacterSetChatChannelAuth, ::sro::chat::RequestSetCharacterSetChatChannelAuth)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth, ::sro::chat::RequestUpdateCharacterSetChatChannelAuth)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatChannel, ::sro::chat::ChatChannel)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatChannels, ::sro::chat::ChatChannels)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatCreateChatChannelMessage, ::sro::chat::CreateChatChannelMessage)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatChatMessage, ::sro::chat::ChatMessage)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatSendChatChannelMessageRequest, ::sro::chat::SendChatChannelMessageRequest)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatSendDirectMessageRequest, ::sro::chat::SendDirectMessageRequest)
DEFINE_JSON_FUNCTIONS(FGrpcSroChatUpdateChatChannelRequest, ::sro::chat::UpdateChatChannelRequest)

FGrpcSroChatChatLogRequestOptional_sender_id UGrpcSroChatChatLogRequestOptional_sender_idHelperLibrary::MakeOptional_sender_id(EGrpcSroChatChatLogRequestOptional_sender_id Optional_sender_idCase, 
    FString SenderId 
)
{
    FGrpcSroChatChatLogRequestOptional_sender_id Optional_sender_id;
    Optional_sender_id.Optional_sender_idCase = Optional_sender_idCase;
    Optional_sender_id.SenderId = SenderId;

    return Optional_sender_id;
}

void UGrpcSroChatChatLogRequestOptional_sender_idHelperLibrary::BreakOptional_sender_id(const FGrpcSroChatChatLogRequestOptional_sender_id& Optional_sender_id, EGrpcSroChatChatLogRequestOptional_sender_id& Optional_sender_idCase, 
    FString& SenderId 
)
{
    Optional_sender_idCase = Optional_sender_id.Optional_sender_idCase;
    SenderId = Optional_sender_id.SenderId;
}

FGrpcSroChatChatLogRequestOptional_before UGrpcSroChatChatLogRequestOptional_beforeHelperLibrary::MakeOptional_before(EGrpcSroChatChatLogRequestOptional_before Optional_beforeCase, 
    int64 Before 
)
{
    FGrpcSroChatChatLogRequestOptional_before Optional_before;
    Optional_before.Optional_beforeCase = Optional_beforeCase;
    Optional_before.Before = Before;

    return Optional_before;
}

void UGrpcSroChatChatLogRequestOptional_beforeHelperLibrary::BreakOptional_before(const FGrpcSroChatChatLogRequestOptional_before& Optional_before, EGrpcSroChatChatLogRequestOptional_before& Optional_beforeCase, 
    int64& Before 
)
{
    Optional_beforeCase = Optional_before.Optional_beforeCase;
    Before = Optional_before.Before;
}

FGrpcSroChatChatLogRequestOptional_after UGrpcSroChatChatLogRequestOptional_afterHelperLibrary::MakeOptional_after(EGrpcSroChatChatLogRequestOptional_after Optional_afterCase, 
    int64 After 
)
{
    FGrpcSroChatChatLogRequestOptional_after Optional_after;
    Optional_after.Optional_afterCase = Optional_afterCase;
    Optional_after.After = After;

    return Optional_after;
}

void UGrpcSroChatChatLogRequestOptional_afterHelperLibrary::BreakOptional_after(const FGrpcSroChatChatLogRequestOptional_after& Optional_after, EGrpcSroChatChatLogRequestOptional_after& Optional_afterCase, 
    int64& After 
)
{
    Optional_afterCase = Optional_after.Optional_afterCase;
    After = Optional_after.After;
}

FGrpcSroChatChatLogRequestOptional_limit UGrpcSroChatChatLogRequestOptional_limitHelperLibrary::MakeOptional_limit(EGrpcSroChatChatLogRequestOptional_limit Optional_limitCase, 
    FUInt64 Limit 
)
{
    FGrpcSroChatChatLogRequestOptional_limit Optional_limit;
    Optional_limit.Optional_limitCase = Optional_limitCase;
    Optional_limit.Limit = Limit;

    return Optional_limit;
}

void UGrpcSroChatChatLogRequestOptional_limitHelperLibrary::BreakOptional_limit(const FGrpcSroChatChatLogRequestOptional_limit& Optional_limit, EGrpcSroChatChatLogRequestOptional_limit& Optional_limitCase, 
    FUInt64& Limit 
)
{
    Optional_limitCase = Optional_limit.Optional_limitCase;
    Limit = Optional_limit.Limit;
}

FGrpcSroChatChatLogRequestOptional_offset UGrpcSroChatChatLogRequestOptional_offsetHelperLibrary::MakeOptional_offset(EGrpcSroChatChatLogRequestOptional_offset Optional_offsetCase, 
    FUInt64 Offset 
)
{
    FGrpcSroChatChatLogRequestOptional_offset Optional_offset;
    Optional_offset.Optional_offsetCase = Optional_offsetCase;
    Optional_offset.Offset = Offset;

    return Optional_offset;
}

void UGrpcSroChatChatLogRequestOptional_offsetHelperLibrary::BreakOptional_offset(const FGrpcSroChatChatLogRequestOptional_offset& Optional_offset, EGrpcSroChatChatLogRequestOptional_offset& Optional_offsetCase, 
    FUInt64& Offset 
)
{
    Optional_offsetCase = Optional_offset.Optional_offsetCase;
    Offset = Optional_offset.Offset;
}

FGrpcSroChatUpdateChatChannelRequestOptional_name UGrpcSroChatUpdateChatChannelRequestOptional_nameHelperLibrary::MakeOptional_name(EGrpcSroChatUpdateChatChannelRequestOptional_name Optional_nameCase, 
    FString Name 
)
{
    FGrpcSroChatUpdateChatChannelRequestOptional_name Optional_name;
    Optional_name.Optional_nameCase = Optional_nameCase;
    Optional_name.Name = Name;

    return Optional_name;
}

void UGrpcSroChatUpdateChatChannelRequestOptional_nameHelperLibrary::BreakOptional_name(const FGrpcSroChatUpdateChatChannelRequestOptional_name& Optional_name, EGrpcSroChatUpdateChatChannelRequestOptional_name& Optional_nameCase, 
    FString& Name 
)
{
    Optional_nameCase = Optional_name.Optional_nameCase;
    Name = Optional_name.Name;
}

FGrpcSroChatUpdateChatChannelRequestOptional_dimension UGrpcSroChatUpdateChatChannelRequestOptional_dimensionHelperLibrary::MakeOptional_dimension(EGrpcSroChatUpdateChatChannelRequestOptional_dimension Optional_dimensionCase, 
    FString Dimension 
)
{
    FGrpcSroChatUpdateChatChannelRequestOptional_dimension Optional_dimension;
    Optional_dimension.Optional_dimensionCase = Optional_dimensionCase;
    Optional_dimension.Dimension = Dimension;

    return Optional_dimension;
}

void UGrpcSroChatUpdateChatChannelRequestOptional_dimensionHelperLibrary::BreakOptional_dimension(const FGrpcSroChatUpdateChatChannelRequestOptional_dimension& Optional_dimension, EGrpcSroChatUpdateChatChannelRequestOptional_dimension& Optional_dimensionCase, 
    FString& Dimension 
)
{
    Optional_dimensionCase = Optional_dimension.Optional_dimensionCase;
    Dimension = Optional_dimension.Dimension;
}

FGrpcSroChatUpdateChatChannelRequestOptional_public UGrpcSroChatUpdateChatChannelRequestOptional_publicHelperLibrary::MakeOptional_public(EGrpcSroChatUpdateChatChannelRequestOptional_public Optional_publicCase, 
    bool Public 
)
{
    FGrpcSroChatUpdateChatChannelRequestOptional_public Optional_public;
    Optional_public.Optional_publicCase = Optional_publicCase;
    Optional_public.Public = Public;

    return Optional_public;
}

void UGrpcSroChatUpdateChatChannelRequestOptional_publicHelperLibrary::BreakOptional_public(const FGrpcSroChatUpdateChatChannelRequestOptional_public& Optional_public, EGrpcSroChatUpdateChatChannelRequestOptional_public& Optional_publicCase, 
    bool& Public 
)
{
    Optional_publicCase = Optional_public.Optional_publicCase;
    Public = Optional_public.Public;
}

