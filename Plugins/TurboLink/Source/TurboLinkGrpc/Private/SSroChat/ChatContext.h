//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroChat/ChatMessage.h"
#include "SSroChat/ChatMarshaling.h"
class GrpcContext_ChatService_ConnectChatChannel : public GrpcContext_Ping_Stream<ChatService_ConnectChatChannel_ReaderWriter, ::sro::chat::ChatMessage>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Stream<ChatService_ConnectChatChannel_ReaderWriter, ::sro::chat::ChatMessage> Super;

private:
	void Call(const FGrpcSroChatConnectChatChannelRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_ConnectChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_ConnectDirectMessages : public GrpcContext_Ping_Stream<ChatService_ConnectDirectMessages_ReaderWriter, ::sro::chat::ChatMessage>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Stream<ChatService_ConnectDirectMessages_ReaderWriter, ::sro::chat::ChatMessage> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_ConnectDirectMessages(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_SendChatChannelMessage : public GrpcContext_Ping_Pong<ChatService_SendChatChannelMessage_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_SendChatChannelMessage_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatSendChatChannelMessageRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_SendChatChannelMessage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_SendDirectMessage : public GrpcContext_Ping_Pong<ChatService_SendDirectMessage_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_SendDirectMessage_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatSendDirectMessageRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_SendDirectMessage(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetChatChannels : public GrpcContext_Ping_Pong<ChatService_GetChatChannels_ReaderWriter, ::sro::chat::ChatChannels>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetChatChannels_ReaderWriter, ::sro::chat::ChatChannels> Super;

private:
	void Call(const FGrpcGoogleProtobufEmpty& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetChatChannels(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetChatChannel : public GrpcContext_Ping_Pong<ChatService_GetChatChannel_ReaderWriter, ::sro::chat::ChatChannel>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetChatChannel_ReaderWriter, ::sro::chat::ChatChannel> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_CreateChatChannel : public GrpcContext_Ping_Pong<ChatService_CreateChatChannel_ReaderWriter, ::sro::chat::ChatChannel>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_CreateChatChannel_ReaderWriter, ::sro::chat::ChatChannel> Super;

private:
	void Call(const FGrpcSroChatCreateChatChannelMessage& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_CreateChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_DeleteChatChannel : public GrpcContext_Ping_Pong<ChatService_DeleteChatChannel_ReaderWriter, ::sro::chat::ChatChannel>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_DeleteChatChannel_ReaderWriter, ::sro::chat::ChatChannel> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_DeleteChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_EditChatChannel : public GrpcContext_Ping_Pong<ChatService_EditChatChannel_ReaderWriter, ::sro::chat::ChatChannel>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_EditChatChannel_ReaderWriter, ::sro::chat::ChatChannel> Super;

private:
	void Call(const FGrpcSroChatUpdateChatChannelRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_EditChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetAuthorizedChatChannels : public GrpcContext_Ping_Pong<ChatService_GetAuthorizedChatChannels_ReaderWriter, ::sro::chat::ChatChannels>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetAuthorizedChatChannels_ReaderWriter, ::sro::chat::ChatChannels> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetAuthorizedChatChannels(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_SetCharacterChatChannelAuth : public GrpcContext_Ping_Pong<ChatService_SetCharacterChatChannelAuth_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_SetCharacterChatChannelAuth_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatRequestSetCharacterSetChatChannelAuth& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_SetCharacterChatChannelAuth(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_UpdateCharacterChatChannelAuth : public GrpcContext_Ping_Pong<ChatService_UpdateCharacterChatChannelAuth_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_UpdateCharacterChatChannelAuth_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_UpdateCharacterChatChannelAuth(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_BanCharacterFromChatChannel : public GrpcContext_Ping_Pong<ChatService_BanCharacterFromChatChannel_ReaderWriter, ::google::protobuf::Empty>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_BanCharacterFromChatChannel_ReaderWriter, ::google::protobuf::Empty> Super;

private:
	void Call(const FGrpcSroChatBanRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_BanCharacterFromChatChannel(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ChatService_GetChatLogs : public GrpcContext_Ping_Pong<ChatService_GetChatLogs_ReaderWriter, ::sro::chat::ChatLogs>
{
	friend class UChatServiceClient;
	typedef GrpcContext_Ping_Pong<ChatService_GetChatLogs_ReaderWriter, ::sro::chat::ChatLogs> Super;

private:
	void Call(const FGrpcSroChatChatLogRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ChatService_GetChatLogs(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

