//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "SSroChat/ChatMessage.h"
#include "TurboLinkGrpcContext.h"
#include "sro/chat/chat.grpc.pb.h"

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatLogRequest* in, FGrpcSroChatChatLogRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatLogRequest* in, ::sro::chat::ChatLogRequest* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatLog* in, FGrpcSroChatChatLog* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatLog* in, ::sro::chat::ChatLog* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatLogs* in, FGrpcSroChatChatLogs* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatLogs* in, ::sro::chat::ChatLogs* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::BanRequest* in, FGrpcSroChatBanRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatBanRequest* in, ::sro::chat::BanRequest* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ConnectChatChannelRequest* in, FGrpcSroChatConnectChatChannelRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatConnectChatChannelRequest* in, ::sro::chat::ConnectChatChannelRequest* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::RequestSetCharacterSetChatChannelAuth* in, FGrpcSroChatRequestSetCharacterSetChatChannelAuth* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatRequestSetCharacterSetChatChannelAuth* in, ::sro::chat::RequestSetCharacterSetChatChannelAuth* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::RequestUpdateCharacterSetChatChannelAuth* in, FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth* in, ::sro::chat::RequestUpdateCharacterSetChatChannelAuth* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatChannel* in, FGrpcSroChatChatChannel* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatChannel* in, ::sro::chat::ChatChannel* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatChannels* in, FGrpcSroChatChatChannels* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatChannels* in, ::sro::chat::ChatChannels* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::CreateChatChannelMessage* in, FGrpcSroChatCreateChatChannelMessage* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatCreateChatChannelMessage* in, ::sro::chat::CreateChatChannelMessage* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::ChatMessage* in, FGrpcSroChatChatMessage* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatChatMessage* in, ::sro::chat::ChatMessage* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::SendChatChannelMessageRequest* in, FGrpcSroChatSendChatChannelMessageRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatSendChatChannelMessageRequest* in, ::sro::chat::SendChatChannelMessageRequest* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::SendDirectMessageRequest* in, FGrpcSroChatSendDirectMessageRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatSendDirectMessageRequest* in, ::sro::chat::SendDirectMessageRequest* out);

void GRPC_TO_TURBOLINK(const ::sro::chat::UpdateChatChannelRequest* in, FGrpcSroChatUpdateChatChannelRequest* out);
void TURBOLINK_TO_GRPC(const FGrpcSroChatUpdateChatChannelRequest* in, ::sro::chat::UpdateChatChannelRequest* out);

typedef grpc::ClientAsyncReader<::sro::chat::ChatMessage> ChatService_ConnectChatChannel_ReaderWriter;
typedef grpc::ClientAsyncReader<::sro::chat::ChatMessage> ChatService_ConnectDirectMessages_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::google::protobuf::Empty> ChatService_SendChatChannelMessage_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::google::protobuf::Empty> ChatService_SendDirectMessage_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannels> ChatService_GetChatChannels_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannel> ChatService_GetChatChannel_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannel> ChatService_CreateChatChannel_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannel> ChatService_DeleteChatChannel_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannel> ChatService_EditChatChannel_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatChannels> ChatService_GetAuthorizedChatChannels_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::google::protobuf::Empty> ChatService_SetCharacterChatChannelAuth_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::google::protobuf::Empty> ChatService_UpdateCharacterChatChannelAuth_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::google::protobuf::Empty> ChatService_BanCharacterFromChatChannel_ReaderWriter;
typedef grpc::ClientAsyncResponseReader<::sro::chat::ChatLogs> ChatService_GetChatLogs_ReaderWriter;
