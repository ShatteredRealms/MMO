// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sro/gameserver/dimension.proto
#ifndef GRPC_sro_2fgameserver_2fdimension_2eproto__INCLUDED
#define GRPC_sro_2fgameserver_2fdimension_2eproto__INCLUDED

#include "sro/gameserver/dimension.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sro {
namespace gameserver {

class DimensionService final {
 public:
  static constexpr char const* service_full_name() {
    return "sro.gameserver.DimensionService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::sro::gameserver::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> AsyncGetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(AsyncGetDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> PrepareAsyncGetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(PrepareAsyncGetDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gameserver::Dimensions* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>> AsyncGetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>>(AsyncGetDimensionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>> PrepareAsyncGetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>>(PrepareAsyncGetDimensionsRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::sro::gameserver::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> AsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(AsyncCreateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> PrepareAsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(PrepareAsyncCreateDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::sro::gameserver::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> AsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(AsyncDuplicateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> PrepareAsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(PrepareAsyncDuplicateDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::sro::gameserver::Dimension* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> AsyncEditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(AsyncEditDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>> PrepareAsyncEditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>>(PrepareAsyncEditDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteDimensionRaw(context, request, cq));
    }
    virtual ::grpc::Status GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::sro::gameserver::GameServerUpdateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>> AsyncGameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>>(AsyncGameServerUpdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>> PrepareAsyncGameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>>(PrepareAsyncGameServerUpdateRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* AsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* PrepareAsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>* AsyncGetDimensionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimensions>* PrepareAsyncGetDimensionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* AsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* PrepareAsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* AsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* PrepareAsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* AsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::Dimension>* PrepareAsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>* AsyncGameServerUpdateRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sro::gameserver::GameServerUpdateResponse>* PrepareAsyncGameServerUpdateRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::sro::gameserver::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> AsyncGetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(AsyncGetDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> PrepareAsyncGetDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(PrepareAsyncGetDimensionRaw(context, request, cq));
    }
    ::grpc::Status GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::sro::gameserver::Dimensions* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>> AsyncGetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>>(AsyncGetDimensionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>> PrepareAsyncGetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>>(PrepareAsyncGetDimensionsRaw(context, request, cq));
    }
    ::grpc::Status CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::sro::gameserver::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> AsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(AsyncCreateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> PrepareAsyncCreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(PrepareAsyncCreateDimensionRaw(context, request, cq));
    }
    ::grpc::Status DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::sro::gameserver::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> AsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(AsyncDuplicateDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> PrepareAsyncDuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(PrepareAsyncDuplicateDimensionRaw(context, request, cq));
    }
    ::grpc::Status EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::sro::gameserver::Dimension* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> AsyncEditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(AsyncEditDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>> PrepareAsyncEditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>>(PrepareAsyncEditDimensionRaw(context, request, cq));
    }
    ::grpc::Status DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteDimensionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteDimensionRaw(context, request, cq));
    }
    ::grpc::Status GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::sro::gameserver::GameServerUpdateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>> AsyncGameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>>(AsyncGameServerUpdateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>> PrepareAsyncGameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>>(PrepareAsyncGameServerUpdateRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) override;
      void GetDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response, std::function<void(::grpc::Status)>) override;
      void GetDimensions(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) override;
      void CreateDimension(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) override;
      void DuplicateDimension(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response, std::function<void(::grpc::Status)>) override;
      void EditDimension(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeleteDimension(::grpc::ClientContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response, std::function<void(::grpc::Status)>) override;
      void GameServerUpdate(::grpc::ClientContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* AsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* PrepareAsyncGetDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>* AsyncGetDimensionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimensions>* PrepareAsyncGetDimensionsRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* AsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* PrepareAsyncCreateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::CreateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* AsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* PrepareAsyncDuplicateDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::DuplicateDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* AsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::Dimension>* PrepareAsyncEditDimensionRaw(::grpc::ClientContext* context, const ::sro::gameserver::EditDimensionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteDimensionRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>* AsyncGameServerUpdateRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sro::gameserver::GameServerUpdateResponse>* PrepareAsyncGameServerUpdateRaw(::grpc::ClientContext* context, const ::sro::TargetId& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDimensions_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_DuplicateDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_EditDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDimension_;
    const ::grpc::internal::RpcMethod rpcmethod_GameServerUpdate_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetDimension(::grpc::ServerContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response);
    virtual ::grpc::Status GetDimensions(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response);
    virtual ::grpc::Status CreateDimension(::grpc::ServerContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response);
    virtual ::grpc::Status DuplicateDimension(::grpc::ServerContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response);
    virtual ::grpc::Status EditDimension(::grpc::ServerContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response);
    virtual ::grpc::Status DeleteDimension(::grpc::ServerContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GameServerUpdate(::grpc::ServerContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDimension() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimension(::grpc::ServerContext* context, ::sro::TargetId* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDimensions() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimensions(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::Dimensions>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDimension() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDimension(::grpc::ServerContext* context, ::sro::gameserver::CreateDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateDimension(::grpc::ServerContext* context, ::sro::gameserver::DuplicateDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EditDimension() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditDimension(::grpc::ServerContext* context, ::sro::gameserver::EditDimensionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::Dimension>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDimension(::grpc::ServerContext* context, ::sro::TargetId* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGameServerUpdate(::grpc::ServerContext* context, ::sro::TargetId* request, ::grpc::ServerAsyncResponseWriter< ::sro::gameserver::GameServerUpdateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetDimension<WithAsyncMethod_GetDimensions<WithAsyncMethod_CreateDimension<WithAsyncMethod_DuplicateDimension<WithAsyncMethod_EditDimension<WithAsyncMethod_DeleteDimension<WithAsyncMethod_GameServerUpdate<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDimension() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::sro::gameserver::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::TargetId* request, ::sro::gameserver::Dimension* response) { return this->GetDimension(context, request, response); }));}
    void SetMessageAllocatorFor_GetDimension(
        ::grpc::MessageAllocator< ::sro::TargetId, ::sro::gameserver::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::sro::gameserver::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDimensions() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gameserver::Dimensions>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::sro::gameserver::Dimensions* response) { return this->GetDimensions(context, request, response); }));}
    void SetMessageAllocatorFor_GetDimensions(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::sro::gameserver::Dimensions>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::sro::gameserver::Dimensions>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimensions(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDimension() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::CreateDimensionRequest, ::sro::gameserver::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gameserver::CreateDimensionRequest* request, ::sro::gameserver::Dimension* response) { return this->CreateDimension(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDimension(
        ::grpc::MessageAllocator< ::sro::gameserver::CreateDimensionRequest, ::sro::gameserver::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::CreateDimensionRequest, ::sro::gameserver::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::DuplicateDimensionRequest, ::sro::gameserver::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gameserver::DuplicateDimensionRequest* request, ::sro::gameserver::Dimension* response) { return this->DuplicateDimension(context, request, response); }));}
    void SetMessageAllocatorFor_DuplicateDimension(
        ::grpc::MessageAllocator< ::sro::gameserver::DuplicateDimensionRequest, ::sro::gameserver::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::DuplicateDimensionRequest, ::sro::gameserver::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EditDimension() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::EditDimensionRequest, ::sro::gameserver::Dimension>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::gameserver::EditDimensionRequest* request, ::sro::gameserver::Dimension* response) { return this->EditDimension(context, request, response); }));}
    void SetMessageAllocatorFor_EditDimension(
        ::grpc::MessageAllocator< ::sro::gameserver::EditDimensionRequest, ::sro::gameserver::Dimension>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::gameserver::EditDimensionRequest, ::sro::gameserver::Dimension>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::TargetId* request, ::google::protobuf::Empty* response) { return this->DeleteDimension(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDimension(
        ::grpc::MessageAllocator< ::sro::TargetId, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::sro::gameserver::GameServerUpdateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sro::TargetId* request, ::sro::gameserver::GameServerUpdateResponse* response) { return this->GameServerUpdate(context, request, response); }));}
    void SetMessageAllocatorFor_GameServerUpdate(
        ::grpc::MessageAllocator< ::sro::TargetId, ::sro::gameserver::GameServerUpdateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sro::TargetId, ::sro::gameserver::GameServerUpdateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GameServerUpdate(
      ::grpc::CallbackServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetDimension<WithCallbackMethod_GetDimensions<WithCallbackMethod_CreateDimension<WithCallbackMethod_DuplicateDimension<WithCallbackMethod_EditDimension<WithCallbackMethod_DeleteDimension<WithCallbackMethod_GameServerUpdate<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDimension() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDimensions() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDimension() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EditDimension() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDimension() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDimensions() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDimensions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDimension() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDuplicateDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EditDimension() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEditDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDimension(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGameServerUpdate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDimension() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDimensions() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDimensions(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDimensions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDimension() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DuplicateDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DuplicateDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EditDimension() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EditDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EditDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDimension(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDimension(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GameServerUpdate(context, request, response); }));
    }
    ~WithRawCallbackMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GameServerUpdate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDimension() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::TargetId, ::sro::gameserver::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::TargetId, ::sro::gameserver::Dimension>* streamer) {
                       return this->StreamedGetDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::TargetId,::sro::gameserver::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDimensions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDimensions() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::sro::gameserver::Dimensions>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::sro::gameserver::Dimensions>* streamer) {
                       return this->StreamedGetDimensions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDimensions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDimensions(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::sro::gameserver::Dimensions* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDimensions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::sro::gameserver::Dimensions>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDimension() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gameserver::CreateDimensionRequest, ::sro::gameserver::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gameserver::CreateDimensionRequest, ::sro::gameserver::Dimension>* streamer) {
                       return this->StreamedCreateDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::CreateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gameserver::CreateDimensionRequest,::sro::gameserver::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DuplicateDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DuplicateDimension() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gameserver::DuplicateDimensionRequest, ::sro::gameserver::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gameserver::DuplicateDimensionRequest, ::sro::gameserver::Dimension>* streamer) {
                       return this->StreamedDuplicateDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DuplicateDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DuplicateDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::DuplicateDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDuplicateDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gameserver::DuplicateDimensionRequest,::sro::gameserver::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EditDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EditDimension() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::gameserver::EditDimensionRequest, ::sro::gameserver::Dimension>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::gameserver::EditDimensionRequest, ::sro::gameserver::Dimension>* streamer) {
                       return this->StreamedEditDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EditDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EditDimension(::grpc::ServerContext* /*context*/, const ::sro::gameserver::EditDimensionRequest* /*request*/, ::sro::gameserver::Dimension* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEditDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::gameserver::EditDimensionRequest,::sro::gameserver::Dimension>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDimension : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDimension() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::TargetId, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::TargetId, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteDimension(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDimension() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDimension(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDimension(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::TargetId,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GameServerUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GameServerUpdate() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sro::TargetId, ::sro::gameserver::GameServerUpdateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sro::TargetId, ::sro::gameserver::GameServerUpdateResponse>* streamer) {
                       return this->StreamedGameServerUpdate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GameServerUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GameServerUpdate(::grpc::ServerContext* /*context*/, const ::sro::TargetId* /*request*/, ::sro::gameserver::GameServerUpdateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGameServerUpdate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sro::TargetId,::sro::gameserver::GameServerUpdateResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetDimension<WithStreamedUnaryMethod_GetDimensions<WithStreamedUnaryMethod_CreateDimension<WithStreamedUnaryMethod_DuplicateDimension<WithStreamedUnaryMethod_EditDimension<WithStreamedUnaryMethod_DeleteDimension<WithStreamedUnaryMethod_GameServerUpdate<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetDimension<WithStreamedUnaryMethod_GetDimensions<WithStreamedUnaryMethod_CreateDimension<WithStreamedUnaryMethod_DuplicateDimension<WithStreamedUnaryMethod_EditDimension<WithStreamedUnaryMethod_DeleteDimension<WithStreamedUnaryMethod_GameServerUpdate<Service > > > > > > > StreamedService;
};

}  // namespace gameserver
}  // namespace sro


#endif  // GRPC_sro_2fgameserver_2fdimension_2eproto__INCLUDED
