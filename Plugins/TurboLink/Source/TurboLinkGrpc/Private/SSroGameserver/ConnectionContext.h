//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SSroGameserver/ConnectionMessage.h"
#include "SSroGameserver/ConnectionMarshaling.h"
class GrpcContext_ConnectionService_ConnectGameServer : public GrpcContext_Ping_Pong<ConnectionService_ConnectGameServer_ReaderWriter, ::sro::gameserver::ConnectGameServerResponse>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_ConnectGameServer_ReaderWriter, ::sro::gameserver::ConnectGameServerResponse> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_ConnectGameServer(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_VerifyConnect : public GrpcContext_Ping_Pong<ConnectionService_VerifyConnect_ReaderWriter, ::sro::TargetId>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_VerifyConnect_ReaderWriter, ::sro::TargetId> Super;

private:
	void Call(const FGrpcSroGameserverVerifyConnectRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_VerifyConnect(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_TransferPlayer : public GrpcContext_Ping_Pong<ConnectionService_TransferPlayer_ReaderWriter, ::sro::gameserver::ConnectGameServerResponse>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_TransferPlayer_ReaderWriter, ::sro::gameserver::ConnectGameServerResponse> Super;

private:
	void Call(const FGrpcSroGameserverTransferPlayerRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_TransferPlayer(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_IsCharacterPlaying : public GrpcContext_Ping_Pong<ConnectionService_IsCharacterPlaying_ReaderWriter, ::sro::gameserver::ConnectionStatus>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_IsCharacterPlaying_ReaderWriter, ::sro::gameserver::ConnectionStatus> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_IsCharacterPlaying(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_ConnectionService_IsUserPlaying : public GrpcContext_Ping_Pong<ConnectionService_IsUserPlaying_ReaderWriter, ::sro::gameserver::ConnectionStatus>
{
	friend class UConnectionServiceClient;
	typedef GrpcContext_Ping_Pong<ConnectionService_IsUserPlaying_ReaderWriter, ::sro::gameserver::ConnectionStatus> Super;

private:
	void Call(const FGrpcSroTargetId& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_ConnectionService_IsUserPlaying(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

