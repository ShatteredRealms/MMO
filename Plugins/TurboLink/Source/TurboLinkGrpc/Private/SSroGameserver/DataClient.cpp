//Generated by TurboLink CodeGenerator, do not edit!
#include "SSroGameserver/DataClient.h"
#include "SSroGameserver/DataService.h"
#include "DataContext.h"
#include "TurboLinkGrpcManager_Private.h"
#include "Templates/SharedPointer.h"

FGrpcContextHandle UGameServerDataServiceClient::InitGetGameServerDetails()
{
	FGrpcContextHandle handle = Service->TurboLinkManager->GetNextContextHandle();
	auto context = UGrpcClient::MakeContext<GrpcContext_GameServerDataService_GetGameServerDetails>(handle);
	context->RpcContext = UTurboLinkGrpcManager::Private::CreateRpcClientContext();
	return context->GetHandle();
}

void UGameServerDataServiceClient::GetGameServerDetails(FGrpcContextHandle Handle, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		for (auto const& Pair : MetaData)
		{
			context->Get()->RpcContext->AddMetadata(TCHAR_TO_UTF8(*Pair.Key), TCHAR_TO_UTF8(*Pair.Value));
		}
		auto contextGetGameServerDetails = StaticCastSharedPtr<GrpcContext_GameServerDataService_GetGameServerDetails>(*context);
		contextGetGameServerDetails->Call(Request);
	}
}

void UGameServerDataServiceClient::TryCancel(FGrpcContextHandle Handle)
{
	auto context = UGrpcClient::GetContext(Handle);
	if (context != nullptr)
	{
		(*context)->TryCancel();
	}
}

void UGameServerDataServiceClient::Shutdown()
{
	OnGetGameServerDetailsResponse.Clear();
	Super::Shutdown();
}

