//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "ChatMessage.h"
#include "ChatNode.generated.h"

class UChatService;
class UChatServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceConnectChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceConnectChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatMessage&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService ConnectChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceConnectChatChannel* ConnectChatChannel(UObject* WorldContextObject, const FGrpcSroChatConnectChatChannelRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectChatChannelDelegate OnConnectChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectChatChannelDelegate OnFinished;

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatConnectChatChannelRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatMessage& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceConnectDirectMessages : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceConnectDirectMessagesDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatMessage&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService ConnectDirectMessages"), Category = "TurboLink|ChatService")
	static UCallChatServiceConnectDirectMessages* ConnectDirectMessages(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectDirectMessagesDelegate OnConnectDirectMessagesResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectDirectMessagesDelegate OnFinished;

	UPROPERTY(BlueprintAssignable)
	FChatServiceConnectDirectMessagesDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatMessage& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceSendChatChannelMessage : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceSendChatChannelMessageDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService SendChatChannelMessage"), Category = "TurboLink|ChatService")
	static UCallChatServiceSendChatChannelMessage* SendChatChannelMessage(UObject* WorldContextObject, const FGrpcSroChatSendChatChannelMessageRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceSendChatChannelMessageDelegate OnSendChatChannelMessageResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceSendChatChannelMessageDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatSendChatChannelMessageRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceSendDirectMessage : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceSendDirectMessageDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService SendDirectMessage"), Category = "TurboLink|ChatService")
	static UCallChatServiceSendDirectMessage* SendDirectMessage(UObject* WorldContextObject, const FGrpcSroChatSendDirectMessageRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceSendDirectMessageDelegate OnSendDirectMessageResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceSendDirectMessageDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatSendDirectMessageRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceGetChatChannels : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceGetChatChannelsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannels&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService GetChatChannels"), Category = "TurboLink|ChatService")
	static UCallChatServiceGetChatChannels* GetChatChannels(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatChannelsDelegate OnGetChatChannelsResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatChannelsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannels& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceGetChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceGetChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannel&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService GetChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceGetChatChannel* GetChatChannel(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatChannelDelegate OnGetChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannel& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceCreateChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceCreateChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannel&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService CreateChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceCreateChatChannel* CreateChatChannel(UObject* WorldContextObject, const FGrpcSroChatCreateChatChannelMessage& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceCreateChatChannelDelegate OnCreateChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceCreateChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatCreateChatChannelMessage Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannel& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceDeleteChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceDeleteChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannel&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService DeleteChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceDeleteChatChannel* DeleteChatChannel(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceDeleteChatChannelDelegate OnDeleteChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceDeleteChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannel& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceEditChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceEditChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannel&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService EditChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceEditChatChannel* EditChatChannel(UObject* WorldContextObject, const FGrpcSroChatUpdateChatChannelRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceEditChatChannelDelegate OnEditChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceEditChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatUpdateChatChannelRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannel& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceGetAuthorizedChatChannels : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceGetAuthorizedChatChannelsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatChannels&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService GetAuthorizedChatChannels"), Category = "TurboLink|ChatService")
	static UCallChatServiceGetAuthorizedChatChannels* GetAuthorizedChatChannels(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetAuthorizedChatChannelsDelegate OnGetAuthorizedChatChannelsResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetAuthorizedChatChannelsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatChannels& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceSetCharacterChatChannelAuth : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceSetCharacterChatChannelAuthDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService SetCharacterChatChannelAuth"), Category = "TurboLink|ChatService")
	static UCallChatServiceSetCharacterChatChannelAuth* SetCharacterChatChannelAuth(UObject* WorldContextObject, const FGrpcSroChatRequestSetCharacterSetChatChannelAuth& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceSetCharacterChatChannelAuthDelegate OnSetCharacterChatChannelAuthResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceSetCharacterChatChannelAuthDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatRequestSetCharacterSetChatChannelAuth Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceUpdateCharacterChatChannelAuth : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceUpdateCharacterChatChannelAuthDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService UpdateCharacterChatChannelAuth"), Category = "TurboLink|ChatService")
	static UCallChatServiceUpdateCharacterChatChannelAuth* UpdateCharacterChatChannelAuth(UObject* WorldContextObject, const FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceUpdateCharacterChatChannelAuthDelegate OnUpdateCharacterChatChannelAuthResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceUpdateCharacterChatChannelAuthDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatRequestUpdateCharacterSetChatChannelAuth Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceBanCharacterFromChatChannel : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceBanCharacterFromChatChannelDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService BanCharacterFromChatChannel"), Category = "TurboLink|ChatService")
	static UCallChatServiceBanCharacterFromChatChannel* BanCharacterFromChatChannel(UObject* WorldContextObject, const FGrpcSroChatBanRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceBanCharacterFromChatChannelDelegate OnBanCharacterFromChatChannelResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceBanCharacterFromChatChannelDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatBanRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallChatServiceGetChatLogs : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FChatServiceGetChatLogsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroChatChatLogs&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call ChatService GetChatLogs"), Category = "TurboLink|ChatService")
	static UCallChatServiceGetChatLogs* GetChatLogs(UObject* WorldContextObject, const FGrpcSroChatChatLogRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatLogsDelegate OnGetChatLogsResponse;

	UPROPERTY(BlueprintAssignable)
	FChatServiceGetChatLogsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UChatService> ChatService;
	
	UPROPERTY()
	TObjectPtr<UChatServiceClient> ChatServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroChatChatLogRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroChatChatLogs& Response);

	void Shutdown();
};
