//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "MapMessage.h"
#include "MapNode.generated.h"

class UMapService;
class UMapServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMapServiceGetMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMapServiceGetMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call MapService GetMap"), Category = "TurboLink|MapService")
	static UCallMapServiceGetMap* GetMap(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FMapServiceGetMapDelegate OnGetMapResponse;

	UPROPERTY(BlueprintAssignable)
	FMapServiceGetMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UMapService> MapService;
	
	UPROPERTY()
	TObjectPtr<UMapServiceClient> MapServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMapServiceGetMaps : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMapServiceGetMapsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverMaps&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call MapService GetMaps"), Category = "TurboLink|MapService")
	static UCallMapServiceGetMaps* GetMaps(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FMapServiceGetMapsDelegate OnGetMapsResponse;

	UPROPERTY(BlueprintAssignable)
	FMapServiceGetMapsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UMapService> MapService;
	
	UPROPERTY()
	TObjectPtr<UMapServiceClient> MapServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverMaps& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMapServiceCreateMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMapServiceCreateMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call MapService CreateMap"), Category = "TurboLink|MapService")
	static UCallMapServiceCreateMap* CreateMap(UObject* WorldContextObject, const FGrpcSroGameserverCreateMapRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FMapServiceCreateMapDelegate OnCreateMapResponse;

	UPROPERTY(BlueprintAssignable)
	FMapServiceCreateMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UMapService> MapService;
	
	UPROPERTY()
	TObjectPtr<UMapServiceClient> MapServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGameserverCreateMapRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMapServiceEditMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMapServiceEditMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverMap&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call MapService EditMap"), Category = "TurboLink|MapService")
	static UCallMapServiceEditMap* EditMap(UObject* WorldContextObject, const FGrpcSroGameserverEditMapRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FMapServiceEditMapDelegate OnEditMapResponse;

	UPROPERTY(BlueprintAssignable)
	FMapServiceEditMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UMapService> MapService;
	
	UPROPERTY()
	TObjectPtr<UMapServiceClient> MapServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGameserverEditMapRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverMap& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallMapServiceDeleteMap : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FMapServiceDeleteMapDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call MapService DeleteMap"), Category = "TurboLink|MapService")
	static UCallMapServiceDeleteMap* DeleteMap(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FMapServiceDeleteMapDelegate OnDeleteMapResponse;

	UPROPERTY(BlueprintAssignable)
	FMapServiceDeleteMapDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UMapService> MapService;
	
	UPROPERTY()
	TObjectPtr<UMapServiceClient> MapServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};
