//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "DimensionMessage.h"
#include "DimensionNode.generated.h"

class UDimensionService;
class UDimensionServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceGetDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceGetDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService GetDimension"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceGetDimension* GetDimension(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGetDimensionDelegate OnGetDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGetDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceGetDimensions : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceGetDimensionsDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverDimensions&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService GetDimensions"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceGetDimensions* GetDimensions(UObject* WorldContextObject, const FGrpcGoogleProtobufEmpty& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGetDimensionsDelegate OnGetDimensionsResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGetDimensionsDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcGoogleProtobufEmpty Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverDimensions& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceCreateDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceCreateDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService CreateDimension"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceCreateDimension* CreateDimension(UObject* WorldContextObject, const FGrpcSroGameserverCreateDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceCreateDimensionDelegate OnCreateDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceCreateDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGameserverCreateDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceDuplicateDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceDuplicateDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService DuplicateDimension"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceDuplicateDimension* DuplicateDimension(UObject* WorldContextObject, const FGrpcSroGameserverDuplicateDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceDuplicateDimensionDelegate OnDuplicateDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceDuplicateDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGameserverDuplicateDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceEditDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceEditDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverDimension&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService EditDimension"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceEditDimension* EditDimension(UObject* WorldContextObject, const FGrpcSroGameserverEditDimensionRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceEditDimensionDelegate OnEditDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceEditDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroGameserverEditDimensionRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverDimension& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceDeleteDimension : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceDeleteDimensionDelegate, const FGrpcResult&, GrpcResult, const FGrpcGoogleProtobufEmpty&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService DeleteDimension"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceDeleteDimension* DeleteDimension(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceDeleteDimensionDelegate OnDeleteDimensionResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceDeleteDimensionDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcGoogleProtobufEmpty& Response);

	void Shutdown();
};

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallDimensionServiceGameServerUpdate : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FDimensionServiceGameServerUpdateDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroGameserverGameServerUpdateResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call DimensionService GameServerUpdate"), Category = "TurboLink|DimensionService")
	static UCallDimensionServiceGameServerUpdate* GameServerUpdate(UObject* WorldContextObject, const FGrpcSroTargetId& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGameServerUpdateDelegate OnGameServerUpdateResponse;

	UPROPERTY(BlueprintAssignable)
	FDimensionServiceGameServerUpdateDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UDimensionService> DimensionService;
	
	UPROPERTY()
	TObjectPtr<UDimensionServiceClient> DimensionServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroTargetId Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroGameserverGameServerUpdateResponse& Response);

	void Shutdown();
};
