//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "CoreMinimal.h"
#include "Kismet/BlueprintAsyncActionBase.h"
#include "TurboLinkGrpcClient.h"
#include "InventoryMessage.h"
#include "InventoryNode.generated.h"

class UInventoryService;
class UInventoryServiceClient;

UCLASS(ClassGroup = TurboLink)
class TURBOLINKGRPC_API UCallInventoryServiceGetInventory : public UBlueprintAsyncActionBase
{
	GENERATED_BODY()

public:
	DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FInventoryServiceGetInventoryDelegate, const FGrpcResult&, GrpcResult, const FGrpcSroCharacterGetInventoryResponse&, Response);

	UFUNCTION(BlueprintCallable, meta = (BlueprintInternalUseOnly = "true", WorldContext = "WorldContextObject", DisplayName = "Call InventoryService GetInventory"), Category = "TurboLink|InventoryService")
	static UCallInventoryServiceGetInventory* GetInventory(UObject* WorldContextObject, const FGrpcSroCharacterGetInventoryRequest& Request, TMap<FString, FString>& MetaData);

	UPROPERTY(BlueprintAssignable)
	FInventoryServiceGetInventoryDelegate OnGetInventoryResponse;

	UPROPERTY(BlueprintAssignable)
	FInventoryServiceGetInventoryDelegate OnFail;

private:
	virtual void Activate() override;

	UPROPERTY()
	TObjectPtr<UInventoryService> InventoryService;
	
	UPROPERTY()
	TObjectPtr<UInventoryServiceClient> InventoryServiceClient;
	
	FGrpcContextHandle Context;
	FGrpcSroCharacterGetInventoryRequest Request;
	EGrpcServiceState ServiceState;
	TMap<FString, FString> MetaData;

	UFUNCTION()
	void OnServiceStateChanged(EGrpcServiceState NewState);
	
	UFUNCTION()
	void OnContextStateChange(FGrpcContextHandle Handle, EGrpcContextState State);

	UFUNCTION()
	void OnResponse(FGrpcContextHandle Handle, const FGrpcResult& GrpcResult, const FGrpcSroCharacterGetInventoryResponse& Response);

	void Shutdown();
};
